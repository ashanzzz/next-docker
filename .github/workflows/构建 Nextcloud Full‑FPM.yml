name: 构建 Nextcloud Full‑FPM

on:
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:
    inputs:
      force_build:
        description: '是否覆盖已有同版本镜像（勾选后将强制构建并覆盖，默认为否）'
        required: false
        default: 'false'
        type: boolean

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/nextcloud-full-fpm
  DOCKERFILE_PATH: next-docker/.examples/dockerfiles/full/fpm/Dockerfile  # 根据实际情况调整
  SUPERVISORD_CONF_PATH: next-docker/.examples/dockerfiles/full/fpm/supervisord.conf  # 根据实际情况调整

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.decide.outputs.should_build }}
      latest_version: ${{ steps.decide.outputs.latest_version }}
    steps:
      - uses: actions/checkout@v4

      # 调试：列出目录结构
      - name: 列出目录结构
        run: |
          echo "当前工作目录："
          pwd
          echo "列出 next-docker/.examples/dockerfiles/full/fpm 下的文件："
          ls -la next-docker/.examples/dockerfiles/full/fpm || echo "目录不存在"

      - name: 展示 Dockerfile 前10行
        run: |
          echo "以下是 Dockerfile 的前10行内容："
          head -n 10 ${{ env.DOCKERFILE_PATH }}
          echo "-------------------------------------"

      - name: 展示 supervisord.conf 前10行
        run: |
          echo "以下是 supervisord.conf 的前10行内容："
          head -n 10 ${{ env.SUPERVISORD_CONF_PATH }}
          echo "-------------------------------------"

      - name: 获取 Nextcloud 最新版本号
        id: upstream
        run: |
          set -e
          echo "⏳ 尝试从 GitHub Releases 获取最新版本号..."
          GITHUB_RESPONSE=$(curl -fsSL "https://api.github.com/repos/nextcloud/server/releases/latest" || true)
          VERSION=$(echo "$GITHUB_RESPONSE" | jq -r '.tag_name' | sed 's/^v//')
          if [ -n "$VERSION" ] && [ "$VERSION" != "null" ]; then
            echo "✔ 从 GitHub Releases 获取到版本：$VERSION"
          else
            echo "❗ GitHub Releases 未获取到版本，尝试 Docker Hub..."
            sudo apt-get update -y && sudo apt-get install -y jq
            TAGS_JSON=$(curl -fsSL "https://registry.hub.docker.com/v2/repositories/library/nextcloud/tags?page_size=100" || true)
            VERSION=$(echo "$TAGS_JSON" | jq -r '.results[].name' | grep -E '^[0-9].*-fpm$' | sed 's/-fpm$//' | sort -V | tail -n1)
            if [ -n "$VERSION" ]; then
              echo "✔ 从 Docker Hub 获取到版本：$VERSION"
            else
              echo "❗ Docker Hub 未获取到版本，尝试从容器内查询..."
              docker pull nextcloud:fpm
              VERSION=$(docker run --rm nextcloud:fpm php -r 'require "/var/www/html/version.php"; echo implode(".", $OC_Version);')
              if [ -n "$VERSION" ]; then
                echo "✔ 从镜像中获取到版本：$VERSION"
              fi
            fi
          fi
          if [ -z "$VERSION" ]; then
            echo "❌ 无法获取 Nextcloud 版本号，终止构建"
            exit 1
          fi
          echo "latest_version=$VERSION" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: 读取历史版本
        id: current
        run: |
          if [[ -f .last_version ]]; then
            echo "current_version=$(cat .last_version)" >> "$GITHUB_OUTPUT"
          else
            echo "current_version=none" >> "$GITHUB_OUTPUT"
          fi

      - name: 判断是否需要构建
        id: decide
        run: |
          FORCE_BUILD=${{ github.event.inputs.force_build || 'false' }}
          if [ "$FORCE_BUILD" == "true" ] || [ "${{ steps.upstream.outputs.latest_version }}" != "${{ steps.current.outputs.current_version }}" ]; then
            echo "✔ 将触发构建（强制构建: $FORCE_BUILD, 最新版本: ${{ steps.upstream.outputs.latest_version }}, 当前版本: ${{ steps.current.outputs.current_version }}）"
            echo "should_build=true" >> "$GITHUB_OUTPUT"
          else
            echo "✖ 无需构建（版本未变化）"
            echo "should_build=false" >> "$GITHUB_OUTPUT"
          fi
          echo "latest_version=${{ steps.upstream.outputs.latest_version }}" >> "$GITHUB_OUTPUT"

  build:
    needs: check
    if: needs.check.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: 登录到 GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 构建并推送镜像
        uses: docker/build-push-action@v5
        with:
          context: next-docker/.examples/dockerfiles/full/fpm  # 根据实际情况调整
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ needs.check.outputs.latest_version }}
            ${{ env.IMAGE_NAME }}:latest
          build-args: |
            NEXTCLOUD_VERSION=${{ needs.check.outputs.latest_version }}
      - name: 更新版本记录
        run: echo "${{ needs.check.outputs.latest_version }}" > .last_version
      - name: 提交版本变更
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: build Nextcloud ${{ needs.check.outputs.latest_version }}"
      - name: 输出构建结果
        run: echo "✅ 已成功构建并推送 Nextcloud Full-FPM v${{ needs.check.outputs.latest_version }}"
