name: 构建 nginx:alpine-slim 镜像

on:
  schedule:
    - cron: "0 0 * * 1"  # 每周一 00:00 UTC
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/nginx-alpine-slim

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.decide.outputs.should_build }}
      latest_digest: ${{ steps.decide.outputs.latest_digest }}
    steps:
      - name: 获取当前 nginx:alpine-slim 镜像 digest
        id: upstream
        run: |
          set -e
          DIGEST=$(docker buildx imagetools inspect nginx:alpine-slim | grep Digest | awk '{ print $2 }')
          echo "✔ 官方镜像 digest: $DIGEST"
          echo "latest_digest=$DIGEST" >> "$GITHUB_OUTPUT"

      - name: 获取上次构建记录
        id: current
        run: |
          if [[ -f .nginx_last_digest ]]; then
            echo "current_digest=$(cat .nginx_last_digest)" >> "$GITHUB_OUTPUT"
          else
            echo "current_digest=none" >> "$GITHUB_OUTPUT"
          fi

      - name: 判断是否需构建
        id: decide
        run: |
          if [ "${{ steps.upstream.outputs.latest_digest }}" != "${{ steps.current.outputs.current_digest }}" ]; then
            echo "should_build=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_build=false" >> "$GITHUB_OUTPUT"
          fi
          echo "latest_digest=${{ steps.upstream.outputs.latest_digest }}" >> "$GITHUB_OUTPUT"

  build:
    needs: check
    if: needs.check.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull nginx:alpine-slim 镜像并重新打 tag
        run: |
          docker pull nginx:alpine-slim
          docker tag nginx:alpine-slim ${{ env.IMAGE_NAME }}:latest

      - name: 推送镜像到 GHCR
        run: |
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: 更新 digest 记录
        run: echo "${{ needs.check.outputs.latest_digest }}" > .nginx_last_digest

      - name: 提交更新记录
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: push nginx:alpine-slim digest ${{ needs.check.outputs.latest_digest }}"
